{
	"name": "sqldb_to_landingfile_adls_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Lkp_EMR_configs",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "generic_adls_flat_file_ds",
						"type": "DatasetReference",
						"parameters": {
							"file_name": {
								"value": "load_config.csv",
								"type": "Expression"
							},
							"file_path": {
								"value": "emr",
								"type": "Expression"
							},
							"container": {
								"value": "configs",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lkp_EMR_configs",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lkp_EMR_configs').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "File_Exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "generic_adls_parquet_ds",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "@item().targetpath",
											"type": "Expression"
										},
										"file_name": {
											"value": "@split(item().tablename,'.')[1]",
											"type": "Expression"
										},
										"container": "bronze"
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If Condition2",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().loadtype,'full')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Fetch_logs",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat(\n  'select coalesce(cast(max(loaddate) as date),''1900-01-01'') as last_fetched_date from audit.load_logs where data_source=''', \n  item().datasource, \n  ''' and tablename=''', \n  item().tablename, \n  ''''\n)\n",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "AzureDatabricksDeltaLakeDataset",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": {
														"value": "\"audit\"",
														"type": "Expression"
													},
													"table_name": {
														"value": "\"load_logs\"",
														"type": "Expression"
													}
												}
											}
										}
									},
									{
										"name": "Incremental_Load_CP",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Fetch_logs",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@if(\n  not(empty(item().watermark)),\n  concat(\n    'select *, ''',\n    item().datasource,\n    ''' as datasource from ',\n    item().tablename,\n    ' where ',\n    item().watermark,\n    ' >= ''',\n    formatDateTime(activity('Fetch_logs').output.firstRow.last_fetched_date, 'yyyy-MM-dd'),\n    ''''\n  ),\n  concat(\n    'select *, ''',\n    item().datasource,\n    ''' as datasource from ',\n    item().tablename\n  )\n)\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "generic_sql_ds",
												"type": "DatasetReference",
												"parameters": {
													"db_name": {
														"value": "@item().database",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@split(item().tablename,'.')[0]",
														"type": "Expression"
													},
													"table_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ds",
												"type": "DatasetReference",
												"parameters": {
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													},
													"container": "bronze"
												}
											}
										]
									},
									{
										"name": "Insert_Logs_Inc_Load",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Incremental_Load_CP",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat(\n    'insert into audit.load_logs(data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) values (''',\n    item().datasource, \n    ''',''', \n    item().tablename, \n    ''',''', \n    string(activity('Incremental_Load_CP').output.rowsRead), \n    ''',''', \n    item().watermark, \n    ''',''', \n    formatDateTime(utcNow(), 'yyyy-MM-ddTHH:mm:ssZ'), \n    ''')'\n)\n",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "AzureDatabricksDeltaLakeDataset",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": {
														"value": "\"audit\"",
														"type": "Expression"
													},
													"table_name": {
														"value": "\"load_logs\"",
														"type": "Expression"
													}
												}
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Full_Load_CP",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "generic_sql_ds",
												"type": "DatasetReference",
												"parameters": {
													"db_name": {
														"value": "@item().database",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@split(item().tablename,'.')[0]",
														"type": "Expression"
													},
													"table_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ds",
												"type": "DatasetReference",
												"parameters": {
													"file_path": {
														"value": "@concat(item().targetpath,'/archive',\nformatDateTime(utcNow(),'yyyy'),'/',\nformatDateTime(utcNow(),'%M'),'/',\nformatDateTime(utcNow(),'%d'))",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													},
													"container": "bronze"
												}
											}
										]
									},
									{
										"name": "Insert_Logs_Full_Load",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Full_Load_CP",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat(\n  'insert into audit.load_logs(data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) values (''',\n  item().datasource, ''',''',\n  item().tablename, ''',''',\n  activity('Full_Load_CP').output.rowsRead, ''',''',\n  item().watermark, ''',''',\n  utcNow(), ''')'\n)\n",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "AzureDatabricksDeltaLakeDataset",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": {
														"value": "\"audit\"",
														"type": "Expression"
													},
													"table_name": {
														"value": "\"load_logs\"",
														"type": "Expression"
													}
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "If Condition2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "File_Exists",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(\n    equals(activity('File_Exists').output.exists, true),\n    equals(item().is_active, '1')\n)\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Archive File",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "generic_adls_parquet_ds",
												"type": "DatasetReference",
												"parameters": {
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													},
													"container": "bronze"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ds",
												"type": "DatasetReference",
												"parameters": {
													"file_path": {
														"value": "@concat(item().targetpath,'/archive',\nformatDateTime(utcNow(),'yyyy'),'/',\nformatDateTime(utcNow(),'MM'),'/',\nformatDateTime(utcNow(),'dd'))",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													},
													"container": {
														"value": "bronze",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}